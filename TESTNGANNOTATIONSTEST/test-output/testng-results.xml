<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="42" passed="39" failed="1" skipped="1">
  <reporter-output>
    <line>
      <![CDATA[this is Data provider class]]>
    </line>
    <line>
      <![CDATA[this is Data provider class]]>
    </line>
    <line>
      <![CDATA[this is Data provider class]]>
    </line>
  </reporter-output>
  <suite started-at="2025-08-29T11:55:34 IST" name="Suite" finished-at="2025-08-29T11:55:34 IST" duration-ms="382">
    <groups>
      <group name="regression">
        <method signature="GroupsTest.Test10()[pri:0, instance:TestCases.GroupsTest@6a78afa0]" name="Test10" class="TestCases.GroupsTest"/>
        <method signature="GroupsTest.Test2()[pri:0, instance:TestCases.GroupsTest@6a78afa0]" name="Test2" class="TestCases.GroupsTest"/>
        <method signature="GroupsTest.Test4()[pri:0, instance:TestCases.GroupsTest@6a78afa0]" name="Test4" class="TestCases.GroupsTest"/>
      </group> <!-- regression -->
      <group name="e2e">
        <method signature="GroupsTest.Test5()[pri:0, instance:TestCases.GroupsTest@6a78afa0]" name="Test5" class="TestCases.GroupsTest"/>
      </group> <!-- e2e -->
      <group name="sanity">
        <method signature="GroupsTest.Test1()[pri:0, instance:TestCases.GroupsTest@6a78afa0]" name="Test1" class="TestCases.GroupsTest"/>
        <method signature="GroupsTest.Test10()[pri:0, instance:TestCases.GroupsTest@6a78afa0]" name="Test10" class="TestCases.GroupsTest"/>
        <method signature="GroupsTest.Test3()[pri:0, instance:TestCases.GroupsTest@6a78afa0]" name="Test3" class="TestCases.GroupsTest"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2025-08-29T11:55:34 IST" name="Test" finished-at="2025-08-29T11:55:34 IST" duration-ms="382">
      <class name="TestCases.DependsOnMethods">
        <test-method signature="Test1()[pri:0, instance:TestCases.DependsOnMethods@10683d9d]" started-at="2025-08-29T11:55:34 IST" name="Test1" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at TestCases.DependsOnMethods.Test1(DependsOnMethods.java:11)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method signature="Test2()[pri:0, instance:TestCases.DependsOnMethods@10683d9d]" started-at="2025-08-29T11:55:34 IST" name="Test2" finished-at="2025-08-29T11:55:34 IST" depends-on-methods="TestCases.DependsOnMethods.Test1" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method signature="Test3()[pri:0, instance:TestCases.DependsOnMethods@10683d9d]" started-at="2025-08-29T11:55:34 IST" name="Test3" finished-at="2025-08-29T11:55:34 IST" depends-on-methods="TestCases.DependsOnMethods.Test1, TestCases.DependsOnMethods.Test2" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCases.DependsOnMethods.Test3() on instance TestCases.DependsOnMethods@10683d9d depends on not successfully finished methods 
[TestCases.DependsOnMethods.Test1() on instance TestCases.DependsOnMethods@10683d9d
TestCases.DependsOnMethods.Test2() on instance TestCases.DependsOnMethods@10683d9d]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCases.DependsOnMethods.Test3() on instance TestCases.DependsOnMethods@10683d9d depends on not successfully finished methods 
[TestCases.DependsOnMethods.Test1() on instance TestCases.DependsOnMethods@10683d9d
TestCases.DependsOnMethods.Test2() on instance TestCases.DependsOnMethods@10683d9d]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method signature="Test4()[pri:0, instance:TestCases.DependsOnMethods@10683d9d]" started-at="2025-08-29T11:55:34 IST" name="Test4" finished-at="2025-08-29T11:55:34 IST" depends-on-methods="TestCases.DependsOnMethods.Test2" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test4 -->
      </class> <!-- TestCases.DependsOnMethods -->
      <class name="TestCases.expectedExceptionTest">
        <test-method signature="exceptionTest1()[pri:0, instance:TestCases.expectedExceptionTest@4218d6a3]" started-at="2025-08-29T11:55:34 IST" name="exceptionTest1" finished-at="2025-08-29T11:55:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exceptionTest1 -->
        <test-method signature="exceptionTest2()[pri:0, instance:TestCases.expectedExceptionTest@4218d6a3]" started-at="2025-08-29T11:55:34 IST" name="exceptionTest2" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at TestCases.expectedExceptionTest.exceptionTest2(expectedExceptionTest.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exceptionTest2 -->
        <test-method signature="exceptionTest3()[pri:0, instance:TestCases.expectedExceptionTest@4218d6a3]" started-at="2025-08-29T11:55:34 IST" name="exceptionTest3" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exceptionTest3 -->
      </class> <!-- TestCases.expectedExceptionTest -->
      <class name="TestCases.EnableParameter">
        <test-method signature="test1()[pri:0, instance:TestCases.EnableParameter@5656be13]" started-at="2025-08-29T11:55:34 IST" name="test1" finished-at="2025-08-29T11:55:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test3()[pri:0, instance:TestCases.EnableParameter@5656be13]" started-at="2025-08-29T11:55:34 IST" name="test3" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method signature="test4()[pri:0, instance:TestCases.EnableParameter@5656be13]" started-at="2025-08-29T11:55:34 IST" name="test4" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
      </class> <!-- TestCases.EnableParameter -->
      <class name="TestCases.InvocationCount">
        <test-method signature="InvocationMethod1()[pri:0, instance:TestCases.InvocationCount@235834f2]" started-at="2025-08-29T11:55:34 IST" name="InvocationMethod1" finished-at="2025-08-29T11:55:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvocationMethod1 -->
        <test-method signature="InvocationMethod2()[pri:0, instance:TestCases.InvocationCount@235834f2]" started-at="2025-08-29T11:55:34 IST" name="InvocationMethod2" finished-at="2025-08-29T11:55:34 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvocationMethod2 -->
        <test-method signature="InvocationMethod2()[pri:0, instance:TestCases.InvocationCount@235834f2]" started-at="2025-08-29T11:55:34 IST" name="InvocationMethod2" finished-at="2025-08-29T11:55:34 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvocationMethod2 -->
        <test-method signature="InvocationMethod2()[pri:0, instance:TestCases.InvocationCount@235834f2]" started-at="2025-08-29T11:55:34 IST" name="InvocationMethod2" finished-at="2025-08-29T11:55:34 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvocationMethod2 -->
        <test-method signature="InvocationMethod2()[pri:0, instance:TestCases.InvocationCount@235834f2]" started-at="2025-08-29T11:55:34 IST" name="InvocationMethod2" finished-at="2025-08-29T11:55:34 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvocationMethod2 -->
        <test-method signature="InvocationMethod2()[pri:0, instance:TestCases.InvocationCount@235834f2]" started-at="2025-08-29T11:55:34 IST" name="InvocationMethod2" finished-at="2025-08-29T11:55:34 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvocationMethod2 -->
      </class> <!-- TestCases.InvocationCount -->
      <class name="TestCases.ParallelExecutionTest2">
        <test-method signature="test5()[pri:0, instance:TestCases.ParallelExecutionTest2@7e6f74c]" started-at="2025-08-29T11:55:34 IST" name="test5" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method signature="test6()[pri:0, instance:TestCases.ParallelExecutionTest2@7e6f74c]" started-at="2025-08-29T11:55:34 IST" name="test6" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
      </class> <!-- TestCases.ParallelExecutionTest2 -->
      <class name="TestCases.DataProviderFromOtherClass">
        <test-method signature="getTestDatafromDataProvider(java.lang.String,java.lang.String)[pri:0, instance:TestCases.DataProviderFromOtherClass@44c03695]" started-at="2025-08-29T11:55:34 IST" name="getTestDatafromDataProvider" data-provider="testdata" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[manu@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestDatafromDataProvider -->
        <test-method signature="getTestDatafromDataProvider(java.lang.String,java.lang.String)[pri:0, instance:TestCases.DataProviderFromOtherClass@44c03695]" started-at="2025-08-29T11:55:34 IST" name="getTestDatafromDataProvider" data-provider="testdata" finished-at="2025-08-29T11:55:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[james@yopmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abe@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestDatafromDataProvider -->
      </class> <!-- TestCases.DataProviderFromOtherClass -->
      <class name="TestCases.GroupsTest">
        <test-method signature="Test1()[pri:0, instance:TestCases.GroupsTest@6a78afa0]" started-at="2025-08-29T11:55:34 IST" name="Test1" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method signature="Test10()[pri:0, instance:TestCases.GroupsTest@6a78afa0]" started-at="2025-08-29T11:55:34 IST" name="Test10" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test10 -->
        <test-method signature="Test2()[pri:0, instance:TestCases.GroupsTest@6a78afa0]" started-at="2025-08-29T11:55:34 IST" name="Test2" finished-at="2025-08-29T11:55:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method signature="Test3()[pri:0, instance:TestCases.GroupsTest@6a78afa0]" started-at="2025-08-29T11:55:34 IST" name="Test3" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method signature="Test4()[pri:0, instance:TestCases.GroupsTest@6a78afa0]" started-at="2025-08-29T11:55:34 IST" name="Test4" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test4 -->
        <test-method signature="Test5()[pri:0, instance:TestCases.GroupsTest@6a78afa0]" started-at="2025-08-29T11:55:34 IST" name="Test5" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test5 -->
      </class> <!-- TestCases.GroupsTest -->
      <class name="TestCases.AnnottionsInTestNG">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:34 IST" name="beforeSuite" finished-at="2025-08-29T11:55:34 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:34 IST" name="beforeTest" finished-at="2025-08-29T11:55:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:34 IST" name="beforeClass" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:34 IST" name="beforeMethod" finished-at="2025-08-29T11:55:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testcase1()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:34 IST" name="testcase1" finished-at="2025-08-29T11:55:34 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:34 IST" name="afterMethod" finished-at="2025-08-29T11:55:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testcase2()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:34 IST" name="testcase2" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:34 IST" name="beforeMethod" finished-at="2025-08-29T11:55:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:34 IST" name="afterMethod" finished-at="2025-08-29T11:55:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:34 IST" name="beforeMethod" finished-at="2025-08-29T11:55:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testcase3()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:34 IST" name="testcase3" finished-at="2025-08-29T11:55:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:34 IST" name="afterMethod" finished-at="2025-08-29T11:55:34 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:34 IST" name="afterClass" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:34 IST" name="afterTest" finished-at="2025-08-29T11:55:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:TestCases.AnnottionsInTestNG@6150c3ec]" started-at="2025-08-29T11:55:35 IST" name="afterSuite" finished-at="2025-08-29T11:55:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- TestCases.AnnottionsInTestNG -->
      <class name="TestCases.Priority">
        <test-method signature="xyz()[pri:-1, instance:TestCases.Priority@dd05255]" started-at="2025-08-29T11:55:34 IST" name="xyz" finished-at="2025-08-29T11:55:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xyz -->
        <test-method signature="lmn()[pri:0, instance:TestCases.Priority@dd05255]" started-at="2025-08-29T11:55:34 IST" name="lmn" finished-at="2025-08-29T11:55:34 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lmn -->
        <test-method signature="omn()[pri:0, instance:TestCases.Priority@dd05255]" started-at="2025-08-29T11:55:34 IST" name="omn" finished-at="2025-08-29T11:55:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- omn -->
        <test-method signature="abc()[pri:1, instance:TestCases.Priority@dd05255]" started-at="2025-08-29T11:55:34 IST" name="abc" finished-at="2025-08-29T11:55:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abc -->
        <test-method signature="ghj()[pri:2, instance:TestCases.Priority@dd05255]" started-at="2025-08-29T11:55:34 IST" name="ghj" finished-at="2025-08-29T11:55:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ghj -->
      </class> <!-- TestCases.Priority -->
      <class name="TestCases.DataProviderTest">
        <test-method signature="GetDataFromDataProvider(java.lang.String,java.lang.String)[pri:0, instance:TestCases.DataProviderTest@76505305]" started-at="2025-08-29T11:55:34 IST" name="GetDataFromDataProvider" data-provider="mytest" finished-at="2025-08-29T11:55:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Swamy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[this is Data provider class]]>
            </line>
          </reporter-output>
        </test-method> <!-- GetDataFromDataProvider -->
        <test-method signature="GetDataFromDataProvider(java.lang.String,java.lang.String)[pri:0, instance:TestCases.DataProviderTest@76505305]" started-at="2025-08-29T11:55:34 IST" name="GetDataFromDataProvider" data-provider="mytest" finished-at="2025-08-29T11:55:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pwddddd]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[this is Data provider class]]>
            </line>
          </reporter-output>
        </test-method> <!-- GetDataFromDataProvider -->
        <test-method signature="GetDataFromDataProvider(java.lang.String,java.lang.String)[pri:0, instance:TestCases.DataProviderTest@76505305]" started-at="2025-08-29T11:55:34 IST" name="GetDataFromDataProvider" data-provider="mytest" finished-at="2025-08-29T11:55:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tanmayee]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Triveni]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[this is Data provider class]]>
            </line>
          </reporter-output>
        </test-method> <!-- GetDataFromDataProvider -->
      </class> <!-- TestCases.DataProviderTest -->
      <class name="TestCases.ParallelExecutionTest">
        <test-method signature="Test1()[pri:0, instance:TestCases.ParallelExecutionTest@48f2bd5b]" started-at="2025-08-29T11:55:34 IST" name="Test1" finished-at="2025-08-29T11:55:34 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method signature="Test2()[pri:0, instance:TestCases.ParallelExecutionTest@48f2bd5b]" started-at="2025-08-29T11:55:34 IST" name="Test2" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method signature="Test3()[pri:0, instance:TestCases.ParallelExecutionTest@48f2bd5b]" started-at="2025-08-29T11:55:34 IST" name="Test3" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method signature="Test4()[pri:0, instance:TestCases.ParallelExecutionTest@48f2bd5b]" started-at="2025-08-29T11:55:34 IST" name="Test4" finished-at="2025-08-29T11:55:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test4 -->
      </class> <!-- TestCases.ParallelExecutionTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
